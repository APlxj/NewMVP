if (Boolean.valueOf(rootProject.ext.isMain)) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'com.jakewharton.butterknife'
//apply plugin: 'me.tatarka.retrolambda'  //lambda配置

apply from: '../MobSDK.gradle'//mob

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //MultiDex分包方法
        multiDexEnabled true

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        //强制前缀
        resourcePrefix "main_"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //解决.9图问题
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    /*java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
     （或文件夹下的源文件）要被编译，哪些源文件要被排除。*/
    sourceSets {
        main {
            if (rootProject.ext.isMain) {
                manifest.srcFile 'src/main/model/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude '*model'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //ARouter多组件问题解决  将arouter-compiler放到使用了@Route注解的模块中
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    //butterknife多组件问题解决 将butterknife-compiler放到使用了@BindView注解的模块中
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]
    //基础库
    implementation project(':model-base')
    //工具
    implementation project(':model-utils')
    //ui
    implementation project(':model-ui')
    //模型
    implementation project(':model-data')
    //网络
    implementation project(':model-net')
    //zxing
    implementation project(':model-zxing')
    //ocr
    implementation project(':model-ocr')
}

//configurations.all {
//    exclude group: 'cn.sharesdk', module: 'ShareSDK-Wechat-Core'
//    exclude group: 'com.mob', module: 'MobTools'
//    exclude group: 'com.mob', module: 'MobGUI'
//    exclude group: 'com.mob', module: 'MobCommons'
//    exclude group: 'com.mob', module: 'MobPush'
//    exclude group: 'com.mob', module: 'SDKWrapper'
//}
